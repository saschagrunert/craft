initSidebarItems({"enum":[["CompileFilter",""],["CompileMode",""],["Kind",""],["MessageFormat",""],["VersionControl",""]],"fn":[["clean","Cleans the project from build artifacts."],["compile",""],["compile_targets",""],["compile_ws",""],["doc",""],["fetch","Executes `craft fetch`."],["generate_lockfile",""],["get_resolved_packages",""],["init",""],["install",""],["install_list",""],["load_pkg_lockfile",""],["new",""],["output_metadata","Loads the manifest, resolves the dependencies of the project to the concrete used versions - considering overrides - and writes all dependencies in a JSON format to stdout."],["package",""],["pkgid",""],["read_manifest",""],["read_package",""],["read_packages",""],["resolve_dependencies",""],["resolve_with_previous","Resolve all dependencies for a package using an optional previous instance of resolve to guide the resolution process."],["resolve_ws","Resolve all dependencies for the specified `package` using the previous lockfile as a guide if present."],["run",""],["uninstall",""],["update_lockfile",""],["write_pkg_lockfile",""]],"struct":[["BuildConfig",""],["BuildOutput","Contains the parsed output of a custom build script."],["CleanOptions",""],["Compilation","A structure returning the result of a compilation."],["CompileOptions","Contains information about how a package should be compiled."],["Context",""],["DocOptions",""],["ExportInfo",""],["Layout",""],["LayoutProxy",""],["NewOptions",""],["OutputMetadataOptions",""],["PackageOpts",""],["TargetConfig",""],["Unit",""],["UpdateOptions",""]]});