var searchIndex = {};
searchIndex["craft"] = {"doc":"Cargo inspired build system for C based projects","items":[[5,"execute_main_without_stdin","craft","",null,null],[5,"call_main_without_stdin","","",null,null],[5,"process_executed","","",null,{"inputs":[{"name":"cliresult"},{"name":"multishell"}],"output":null}],[5,"shell","","",null,{"inputs":[{"name":"verbosity"},{"name":"colorconfig"}],"output":{"name":"multishell"}}],[5,"handle_error","","",null,{"inputs":[{"name":"clierror"},{"name":"multishell"}],"output":null}],[5,"version","","",null,{"inputs":[],"output":{"name":"string"}}],[0,"dependency","","Dependency parsing and management",null,null],[3,"Dependency","craft::dependency","Information about a dependency requested by a Craft manifest. Cheap to copy.",null,null],[3,"DependencyInner","","The data underlying a Dependency.",null,null],[4,"Platform","","",null,null],[13,"Name","","",0,null],[13,"Cfg","","",0,null],[4,"Kind","","",null,null],[13,"Normal","","",1,null],[13,"Development","","",1,null],[13,"Build","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"encode","","",2,null],[11,"eq","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"encode","","",1,null],[11,"parse","","Attempt to create a `Dependency` from an entry in the manifest.",3,{"inputs":[{"name":"str"},{"name":"option"},{"name":"sourceid"},{"name":"option"}],"output":{"name":"craftresult"}}],[11,"new_override","","",3,{"inputs":[{"name":"str"},{"name":"sourceid"}],"output":{"name":"dependencyinner"}}],[11,"version_req","","",3,null],[11,"name","","",3,null],[11,"source_id","","",3,null],[11,"kind","","",3,null],[11,"specified_req","","",3,null],[11,"platform","","If none, this dependency must be built for all platforms.\nIf some, it must only be built for matching platforms.",3,null],[11,"set_kind","","",3,null],[11,"set_features","","Sets the list of features requested for the package.",3,null],[11,"set_default_features","","Sets whether the dependency requests default features of the package.",3,null],[11,"set_optional","","Sets whether the dependency is optional.",3,null],[11,"set_source_id","","Set the source id for this dependency",3,null],[11,"set_version_req","","Set the version requirement for this dependency",3,null],[11,"set_platform","","",3,null],[11,"lock_to","","Lock this dependency to depending on the specified package id",3,null],[11,"is_transitive","","Returns false if the dependency is only used to build the local package.",3,null],[11,"is_build","","",3,null],[11,"is_optional","","",3,null],[11,"uses_default_features","","Returns true if the default features of the dependency are requested.",3,null],[11,"features","","Returns the list of features that are requested by the dependency.",3,null],[11,"matches","","Returns true if the package (`sum`) can fulfill this dependency request.",3,null],[11,"matches_id","","Returns true if the package (`id`) can fulfill this dependency request.",3,null],[11,"into_dependency","","",3,null],[11,"parse","","Attempt to create a `Dependency` from an entry in the manifest.",2,{"inputs":[{"name":"str"},{"name":"option"},{"name":"sourceid"},{"name":"packageid"},{"name":"config"}],"output":{"name":"craftresult"}}],[11,"parse_no_deprecated","","Attempt to create a `Dependency` from an entry in the manifest.",2,{"inputs":[{"name":"str"},{"name":"option"},{"name":"sourceid"}],"output":{"name":"craftresult"}}],[11,"new_override","","",2,{"inputs":[{"name":"str"},{"name":"sourceid"}],"output":{"name":"dependency"}}],[11,"clone_inner","","",2,null],[11,"version_req","","",2,null],[11,"name","","",2,null],[11,"source_id","","",2,null],[11,"kind","","",2,null],[11,"specified_req","","",2,null],[11,"platform","","If none, this dependencies must be built for all platforms.\nIf some, it must only be built for the specified platform.",2,null],[11,"lock_to","","Lock this dependency to depending on the specified package id",2,null],[11,"is_transitive","","Returns false if the dependency is only used to build the local package.",2,null],[11,"is_build","","",2,null],[11,"is_optional","","",2,null],[11,"uses_default_features","","Returns true if the default features of the dependency are requested.",2,null],[11,"features","","Returns the list of features that are requested by the dependency.",2,null],[11,"matches","","Returns true if the package (`sum`) can fulfill this dependency request.",2,null],[11,"matches_id","","Returns true if the package (`id`) can fulfill this dependency request.",2,null],[11,"map_source","","",2,null],[11,"matches","","",0,null],[11,"encode","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"craftresult"}}],[11,"fmt","","",0,null],[0,"manifest","craft","Metadata description about packages",null,null],[3,"Manifest","craft::manifest","Contains all the information about a package, as loaded from a Craft.toml.",null,null],[3,"VirtualManifest","","",null,null],[3,"ManifestMetadata","","General metadata about a package which is just blindly uploaded to the\nregistry.",null,null],[12,"authors","","",4,null],[12,"keywords","","",4,null],[12,"license","","",4,null],[12,"license_file","","",4,null],[12,"description","","",4,null],[12,"readme","","",4,null],[12,"homepage","","",4,null],[12,"repository","","",4,null],[12,"documentation","","",4,null],[3,"Profile","","",null,null],[12,"opt_level","","",5,null],[12,"lto","","",5,null],[12,"codegen_units","","",5,null],[12,"rustc_args","","",5,null],[12,"doc_args","","",5,null],[12,"debuginfo","","",5,null],[12,"debug_assertions","","",5,null],[12,"rpath","","",5,null],[12,"test","","",5,null],[12,"doc","","",5,null],[12,"run_custom_build","","",5,null],[12,"panic","","",5,null],[3,"Profiles","","",null,null],[12,"release","","",6,null],[12,"dev","","",6,null],[12,"test","","",6,null],[12,"test_deps","","",6,null],[12,"bench","","",6,null],[12,"bench_deps","","",6,null],[12,"doc","","",6,null],[12,"custom_build","","",6,null],[3,"Target","","Information about a binary, a library, an example, etc. that is part of the\npackage.",null,null],[4,"EitherManifest","","",null,null],[13,"Real","","",7,null],[13,"Virtual","","",7,null],[4,"LibKind","","",null,null],[13,"Lib","","",8,null],[13,"Rlib","","",8,null],[13,"Dylib","","",8,null],[13,"ProcMacro","","",8,null],[13,"Other","","",8,null],[4,"TargetKind","","",null,null],[13,"Lib","","",9,null],[13,"Bin","","",9,null],[13,"Test","","",9,null],[13,"Bench","","",9,null],[13,"Example","","",9,null],[13,"CustomBuild","","",9,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"hash","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"libkind"}}],[11,"chest_type","","Returns the argument suitable for `--chest-type` to pass to rustc.",8,null],[11,"linkable","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"hash","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"encode","","",9,null],[11,"encode","","",5,null],[11,"decode","","",5,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"hash","","",5,null],[11,"default","","",6,{"inputs":[],"output":{"name":"profiles"}}],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",12,null],[11,"hash","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",12,null],[11,"encode","","",12,null],[11,"new","","",10,{"inputs":[{"name":"summary"},{"name":"vec"},{"name":"vec"},{"name":"vec"},{"name":"option"},{"name":"manifestmetadata"},{"name":"profiles"},{"name":"bool"},{"name":"vec"},{"name":"workspaceconfig"}],"output":{"name":"manifest"}}],[11,"dependencies","","",10,null],[11,"exclude","","",10,null],[11,"include","","",10,null],[11,"metadata","","",10,null],[11,"name","","",10,null],[11,"package_id","","",10,null],[11,"summary","","",10,null],[11,"targets","","",10,null],[11,"version","","",10,null],[11,"warnings","","",10,null],[11,"profiles","","",10,null],[11,"publish","","",10,null],[11,"replace","","",10,null],[11,"links","","",10,null],[11,"workspace_config","","",10,null],[11,"add_warning","","",10,null],[11,"set_summary","","",10,null],[11,"map_source","","",10,null],[11,"new","","",11,{"inputs":[{"name":"vec"},{"name":"workspaceconfig"},{"name":"profiles"}],"output":{"name":"virtualmanifest"}}],[11,"replace","","",11,null],[11,"workspace_config","","",11,null],[11,"profiles","","",11,null],[11,"lib_target","","",12,{"inputs":[{"name":"str"},{"name":"vec"},{"name":"path"},{"name":"metadata"}],"output":{"name":"target"}}],[11,"bin_target","","",12,{"inputs":[{"name":"str"},{"name":"path"},{"name":"option"}],"output":{"name":"target"}}],[11,"custom_build_target","","Builds a `Target` corresponding to the `build = &quot;build.rs&quot;` entry.",12,{"inputs":[{"name":"str"},{"name":"path"},{"name":"option"}],"output":{"name":"target"}}],[11,"example_target","","",12,{"inputs":[{"name":"str"},{"name":"path"}],"output":{"name":"target"}}],[11,"test_target","","",12,{"inputs":[{"name":"str"},{"name":"path"},{"name":"metadata"}],"output":{"name":"target"}}],[11,"bench_target","","",12,{"inputs":[{"name":"str"},{"name":"path"},{"name":"metadata"}],"output":{"name":"target"}}],[11,"name","","",12,null],[11,"chest_name","","",12,null],[11,"src_path","","",12,null],[11,"metadata","","",12,null],[11,"kind","","",12,null],[11,"tested","","",12,null],[11,"harness","","",12,null],[11,"documented","","",12,null],[11,"for_host","","",12,null],[11,"benched","","",12,null],[11,"doctested","","",12,null],[11,"allows_underscores","","",12,null],[11,"is_lib","","",12,null],[11,"linkable","","",12,null],[11,"is_bin","","",12,null],[11,"is_example","","",12,null],[11,"is_test","","",12,null],[11,"is_bench","","",12,null],[11,"is_custom_build","","",12,null],[11,"rustc_chest_types","","Returns the arguments suitable for `--crate-type` to pass to rustc.",12,null],[11,"can_lto","","",12,null],[11,"set_tested","","",12,null],[11,"set_benched","","",12,null],[11,"set_doctest","","",12,null],[11,"set_for_host","","",12,null],[11,"set_harness","","",12,null],[11,"set_doc","","",12,null],[11,"fmt","","",12,null],[11,"default_dev","","",5,{"inputs":[],"output":{"name":"profile"}}],[11,"default_release","","",5,{"inputs":[],"output":{"name":"profile"}}],[11,"default_test","","",5,{"inputs":[],"output":{"name":"profile"}}],[11,"default_bench","","",5,{"inputs":[],"output":{"name":"profile"}}],[11,"default_doc","","",5,{"inputs":[],"output":{"name":"profile"}}],[11,"default_custom_build","","",5,{"inputs":[],"output":{"name":"profile"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"profile"}}],[11,"fmt","","",5,null],[0,"ops","craft","All available internal operations",null,null],[3,"CleanOptions","craft::ops","",null,null],[12,"spec","","",13,null],[12,"target","","",13,null],[12,"config","","",13,null],[12,"release","","",13,null],[3,"CompileOptions","","Contains information about how a package should be compiled.",null,null],[12,"config","","",14,null],[12,"jobs","","Number of concurrent jobs to use.",14,null],[12,"target","","The target platform to compile for (example: `i686-unknown-linux-gnu`).",14,null],[12,"features","","Extra features to build for the root package",14,null],[12,"all_features","","Flag whether all available features should be built for the root package",14,null],[12,"no_default_features","","Flag if the default feature should be built for the root package",14,null],[12,"spec","","Root package to build (if None it&#39;s the current one)",14,null],[12,"filter","","Filter to apply to the root package to select which targets will be built.",14,null],[12,"release","","Whether this is a release build or not",14,null],[12,"mode","","Mode for this compile.",14,null],[12,"message_format","","`--error_format` flag for the compiler.",14,null],[12,"target_doc_args","","Extra arguments to be passed to doc (for main chest and dependencies)",14,null],[12,"target_rustc_args","","The specified target will be compiled with all the available arguments, note that this only\naccounts for the *final* invocation of rustc",14,null],[3,"DocOptions","","",null,null],[12,"open_result","","",15,null],[12,"compile_opts","","",15,null],[3,"UpdateOptions","","",null,null],[12,"config","","",16,null],[12,"to_update","","",16,null],[12,"precise","","",16,null],[12,"aggressive","","",16,null],[3,"NewOptions","","",null,null],[12,"version_control","","",17,null],[12,"bin","","",17,null],[12,"lib","","",17,null],[12,"path","","",17,null],[12,"name","","",17,null],[3,"OutputMetadataOptions","","",null,null],[12,"features","","",18,null],[12,"no_default_features","","",18,null],[12,"all_features","","",18,null],[12,"no_deps","","",18,null],[12,"version","","",18,null],[3,"ExportInfo","","",null,null],[3,"PackageOpts","","",null,null],[12,"config","","",19,null],[12,"list","","",19,null],[12,"check_metadata","","",19,null],[12,"allow_dirty","","",19,null],[12,"verify","","",19,null],[12,"jobs","","",19,null],[3,"BuildOutput","","Contains the parsed output of a custom build script.",null,null],[12,"library_paths","","Paths to pass to rustc with the `-L` flag",20,null],[12,"library_links","","Names and link kinds of libraries, suitable for the `-l` flag",20,null],[12,"cfgs","","Various `--cfg` flags to pass to the compiler",20,null],[12,"metadata","","Metadata to pass to the immediate dependencies",20,null],[12,"rerun_if_changed","","Glob paths to trigger a rerun of this build script.",20,null],[12,"warnings","","Warnings generated by this build,",20,null],[3,"BuildConfig","","",null,null],[12,"host_triple","","",21,null],[12,"host","","",21,null],[12,"requested_target","","",21,null],[12,"target","","",21,null],[12,"jobs","","",21,null],[12,"release","","",21,null],[12,"test","","",21,null],[12,"doc_all","","",21,null],[12,"json_errors","","",21,null],[3,"TargetConfig","","",null,null],[12,"ar","","",22,null],[12,"linker","","",22,null],[12,"overrides","","",22,null],[3,"Context","","",null,null],[12,"config","","",23,null],[12,"resolve","","",23,null],[12,"current_package","","",23,null],[12,"compilation","","",23,null],[12,"packages","","",23,null],[12,"build_state","","",23,null],[12,"build_explicit_deps","","",23,null],[12,"fingerprints","","",23,null],[12,"compiled","","",23,null],[12,"build_config","","",23,null],[12,"build_scripts","","",23,null],[12,"links","","",23,null],[12,"used_in_plugin","","",23,null],[3,"LayoutProxy","","",null,null],[3,"Compilation","","A structure returning the result of a compilation.",null,null],[12,"libraries","","All libraries which were built for a package.",24,null],[12,"tests","","An array of all tests created during this compilation.",24,null],[12,"binaries","","An array of all binaries created.",24,null],[12,"native_dirs","","All directires for the output of native build commands.",24,null],[12,"root_output","","Root output directory (for the local package&#39;s artifacts)",24,null],[12,"deps_output","","Output directory for rust dependencies",24,null],[12,"plugins_dylib_path","","Library search path for compiler plugins and build scripts\nwhich have dynamic dependencies.",24,null],[12,"extra_env","","Extra environment variables that were passed to compilations and should\nbe passed to future invocations of programs.",24,null],[12,"to_doc_test","","",24,null],[12,"cfgs","","Features per package enabled during this compilation.",24,null],[12,"target","","",24,null],[3,"Layout","","",null,null],[3,"Unit","","",null,null],[12,"pkg","","",25,null],[12,"target","","",25,null],[12,"profile","","",25,null],[12,"kind","","",25,null],[4,"CompileFilter","","",null,null],[13,"Everything","","",26,null],[13,"Only","","",26,null],[12,"lib","craft::ops::CompileFilter","",26,null],[12,"bins","","",26,null],[12,"examples","","",26,null],[12,"tests","","",26,null],[12,"benches","","",26,null],[4,"CompileMode","craft::ops","",null,null],[13,"Test","","",27,null],[13,"Build","","",27,null],[13,"Bench","","",27,null],[13,"Doc","","",27,null],[12,"deps","craft::ops::CompileMode","",27,null],[4,"MessageFormat","craft::ops","",null,null],[13,"Human","","",28,null],[13,"Json","","",28,null],[4,"VersionControl","","",null,null],[13,"Git","","",29,null],[13,"Hg","","",29,null],[13,"NoVcs","","",29,null],[4,"Kind","","",null,null],[13,"Host","","",30,null],[13,"Target","","",30,null],[5,"clean","","Cleans the project from build artifacts.",null,{"inputs":[{"name":"workspace"},{"name":"cleanoptions"}],"output":{"name":"craftresult"}}],[5,"compile","","",null,{"inputs":[{"name":"workspace"},{"name":"compileoptions"}],"output":{"name":"craftresult"}}],[5,"compile_ws","","",null,{"inputs":[{"name":"workspace"},{"name":"option"},{"name":"compileoptions"}],"output":{"name":"craftresult"}}],[5,"resolve_dependencies","","",null,null],[5,"doc","","",null,{"inputs":[{"name":"workspace"},{"name":"docoptions"}],"output":{"name":"craftresult"}}],[5,"fetch","","Executes `craft fetch`.",null,{"inputs":[{"name":"workspace"}],"output":{"name":"craftresult"}}],[5,"get_resolved_packages","","",null,{"inputs":[{"name":"resolve"},{"name":"packageregistry"}],"output":{"name":"packageset"}}],[5,"generate_lockfile","","",null,{"inputs":[{"name":"workspace"}],"output":{"name":"craftresult"}}],[5,"update_lockfile","","",null,{"inputs":[{"name":"workspace"},{"name":"updateoptions"}],"output":{"name":"craftresult"}}],[5,"install","","",null,{"inputs":[{"name":"option"},{"name":"option"},{"name":"sourceid"},{"name":"option"},{"name":"compileoptions"},{"name":"bool"}],"output":{"name":"craftresult"}}],[5,"install_list","","",null,{"inputs":[{"name":"option"},{"name":"config"}],"output":{"name":"craftresult"}}],[5,"uninstall","","",null,null],[5,"new","","",null,{"inputs":[{"name":"newoptions"},{"name":"config"}],"output":{"name":"craftresult"}}],[5,"init","","",null,{"inputs":[{"name":"newoptions"},{"name":"config"}],"output":{"name":"craftresult"}}],[5,"output_metadata","","Loads the manifest, resolves the dependencies of the project to the concrete\nused versions - considering overrides - and writes all dependencies in a JSON\nformat to stdout.",null,{"inputs":[{"name":"workspace"},{"name":"outputmetadataoptions"}],"output":{"name":"craftresult"}}],[5,"package","","",null,{"inputs":[{"name":"workspace"},{"name":"packageopts"}],"output":{"name":"craftresult"}}],[5,"pkgid","","",null,{"inputs":[{"name":"workspace"},{"name":"option"}],"output":{"name":"craftresult"}}],[5,"read_manifest","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"craftresult"}}],[5,"read_package","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"craftresult"}}],[5,"read_packages","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"craftresult"}}],[5,"run","","",null,null],[5,"compile_targets","","",null,null],[5,"load_pkg_lockfile","","",null,{"inputs":[{"name":"workspace"}],"output":{"name":"craftresult"}}],[5,"write_pkg_lockfile","","",null,{"inputs":[{"name":"workspace"},{"name":"resolve"}],"output":{"name":"craftresult"}}],[5,"resolve_ws","","Resolve all dependencies for the specified `package` using the previous\nlockfile as a guide if present.",null,{"inputs":[{"name":"packageregistry"},{"name":"workspace"}],"output":{"name":"craftresult"}}],[5,"resolve_with_previous","","Resolve all dependencies for a package using an optional previous instance\nof resolve to guide the resolution process.",null,null],[11,"clone","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",28,null],[11,"eq","","",28,null],[11,"decode","","",28,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"new","","",26,null],[11,"matches","","",26,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"eq","","",29,null],[11,"decode","","",29,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","","",17,{"inputs":[{"name":"option"},{"name":"bool"},{"name":"bool"},{"name":"str"},{"name":"option"}],"output":{"name":"newoptions"}}],[11,"encode","","",31,null],[11,"new","","",24,{"inputs":[{"name":"config"}],"output":{"name":"compilation"}}],[11,"rustc_process","","See `process`.",24,null],[11,"doc_process","","See `process`.",24,null],[11,"host_process","","See `process`.",24,null],[11,"target_process","","See `process`.",24,null],[11,"clone","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"hash","","",25,null],[11,"new","","",23,{"inputs":[{"name":"workspace"},{"name":"resolve"},{"name":"packageset"},{"name":"config"},{"name":"buildconfig"},{"name":"profiles"}],"output":{"name":"craftresult"}}],[11,"prepare","","Prepare this context, ensuring that all filesystem directories are in\nplace.",23,null],[11,"probe_target_info","","Ensure that we&#39;ve collected all target-specific information to compile\nall the units mentioned in `units`.",23,null],[11,"build_used_in_plugin_map","","Builds up the `used_in_plugin` internal to this context from the list of\ntop-level units.",23,null],[11,"layout","","Returns the appropriate directory layout for either a plugin or not.",23,null],[11,"out_dir","","Returns the appropriate output directory for the specified package and\ntarget.",23,null],[11,"host_triple","","Return the host triple for this context",23,null],[11,"target_triple","","Return the target triple which this context is targeting.",23,null],[11,"requested_target","","Requested (not actual) target for the build",23,null],[11,"target_metadata","","Get the metadata for a target in a specific profile",23,null],[11,"file_stem","","Returns the file stem for a given target/profile combo",23,null],[11,"target_filenames","","Return the filenames that the given target for the given profile will\ngenerate, along with whether you can link against that file (e.g. it&#39;s a\nlibrary).",23,null],[11,"dep_targets","","For a package, return all targets which are registered as dependencies\nfor that package.",23,null],[11,"dep_run_custom_build","","Returns the dependencies needed to run a build script.",23,null],[11,"get_package","","Gets a package for the given package id.",23,null],[11,"linker","","Get the user-specified linker for a particular host or target",23,null],[11,"ar","","Get the user-specified `ar` program for a particular host or target",23,null],[11,"cfg","","Get the list of cfg printed out from the compiler for the specified kind",23,null],[11,"jobs","","Number of jobs specified for this build",23,null],[11,"lib_profile","","",23,null],[11,"build_script_profile","","",23,null],[11,"rustflags_args","","",23,null],[11,"docflags_args","","",23,null],[11,"show_warnings","","",23,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"hash","","",20,null],[11,"parse_file","","",20,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"craftresult"}}],[11,"parse","","",20,null],[11,"parse_rustc_flags","","",20,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"craftresult"}}],[11,"new","","",32,{"inputs":[{"name":"workspace"},{"name":"option"},{"name":"str"}],"output":{"name":"craftresult"}}],[11,"at","","",32,{"inputs":[{"name":"config"},{"name":"filesystem"}],"output":{"name":"craftresult"}}],[11,"prepare","","",32,null],[11,"dest","","",32,null],[11,"deps","","",32,null],[11,"examples","","",32,null],[11,"root","","",32,null],[11,"fingerprint","","",32,null],[11,"build","","",32,null],[11,"build_out","","",32,null],[11,"new","","",33,{"inputs":[{"name":"layout"},{"name":"bool"}],"output":{"name":"layoutproxy"}}],[11,"root","","",33,null],[11,"deps","","",33,null],[11,"examples","","",33,null],[11,"build","","",33,null],[11,"build_out","","",33,null],[11,"proxy","","",33,null],[11,"out_dir","","",33,null],[11,"doc_root","","",33,null],[11,"eq","","",30,null],[11,"hash","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"partial_cmp","","",30,null],[11,"cmp","","",30,null],[11,"default","","",21,{"inputs":[],"output":{"name":"buildconfig"}}],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"default","","",22,{"inputs":[],"output":{"name":"targetconfig"}}],[0,"package","craft","General package descriptions",null,null],[3,"Package","craft::package","Information about a package that is available somewhere in the file system.\nA package is a `Craft.toml` file plus all the files that are part of it.",null,null],[3,"PackageSet","","",null,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"encode","","",34,null],[11,"new","","",34,{"inputs":[{"name":"manifest"},{"name":"path"}],"output":{"name":"package"}}],[11,"for_path","","",34,{"inputs":[{"name":"path"},{"name":"config"}],"output":{"name":"craftresult"}}],[11,"dependencies","","",34,null],[11,"manifest","","",34,null],[11,"manifest_path","","",34,null],[11,"name","","",34,null],[11,"package_id","","",34,null],[11,"root","","",34,null],[11,"summary","","",34,null],[11,"targets","","",34,null],[11,"version","","",34,null],[11,"authors","","",34,null],[11,"publish","","",34,null],[11,"has_custom_build","","",34,null],[11,"generate_metadata","","",34,null],[11,"find_closest_target","","",34,null],[11,"map_source","","",34,null],[11,"fmt","","",34,null],[11,"eq","","",34,null],[11,"hash","","",34,null],[11,"new","","",35,null],[11,"package_ids","","",35,null],[11,"get","","",35,null],[11,"sources","","",35,null],[0,"package_id","craft","Package ID generation and parsing",null,null],[3,"PackageId","craft::package_id","Identifier for a specific version of a package in a specific source.",null,null],[3,"Metadata","","",null,null],[12,"metadata","","",36,null],[12,"extra_filename","","",36,null],[4,"PackageIdError","","",null,null],[13,"InvalidVersion","","",37,null],[13,"InvalidNamespace","","",37,null],[11,"clone","","",38,null],[11,"encode","","",38,null],[11,"decode","","",38,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"hash","","",38,null],[11,"eq","","",38,null],[11,"partial_cmp","","",38,null],[11,"cmp","","",38,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"description","","",37,null],[11,"fmt","","",37,null],[11,"is_human","","",37,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"hash","","",36,null],[11,"clone","","",36,null],[11,"encode","","",36,null],[11,"fmt","","",36,null],[11,"new","","",38,{"inputs":[{"name":"str"},{"name":"t"},{"name":"sourceid"}],"output":{"name":"craftresult"}}],[11,"name","","",38,null],[11,"version","","",38,null],[11,"source_id","","",38,null],[11,"generate_metadata","","",38,null],[11,"with_precise","","",38,null],[11,"with_source_id","","",38,null],[11,"mix","","",36,null],[11,"fmt","","",38,null],[11,"fmt","","",38,null],[0,"package_id_spec","craft","Package ID specifications",null,null],[3,"PackageIdSpec","craft::package_id_spec","",null,null],[11,"clone","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"fmt","","",39,null],[11,"parse","","",39,{"inputs":[{"name":"str"}],"output":{"name":"craftresult"}}],[11,"query_str","","",39,{"inputs":[{"name":"str"},{"name":"i"}],"output":{"name":"craftresult"}}],[11,"from_package_id","","",39,{"inputs":[{"name":"packageid"}],"output":{"name":"packageidspec"}}],[11,"name","","",39,null],[11,"version","","",39,null],[11,"url","","",39,null],[11,"set_url","","",39,null],[11,"matches","","",39,null],[11,"query","","",39,null],[11,"fmt","","",39,null],[0,"registry","craft","Registry manipulation and description",null,null],[3,"PackageRegistry","craft::registry","This structure represents a registry of known packages. It internally\ncontains a number of `Box&lt;Source&gt;` instances which are used to load a\n`Package` from.",null,null],[8,"Registry","","Source of information about a group of packages.",null,null],[10,"query","","Attempt to find the packages that match a dependency request.",40,null],[11,"supports_checksums","","Returns whether or not this registry will return summaries with\nchecksums listed.",40,null],[11,"new","","",41,{"inputs":[{"name":"config"}],"output":{"name":"craftresult"}}],[11,"get","","",41,null],[11,"add_sources","","",41,null],[11,"add_preloaded","","",41,null],[11,"add_override","","",41,null],[11,"register_lock","","",41,null],[11,"lock","","This function is used to transform a summary to another locked summary\nif possible. This is where the concept of a lockfile comes into play.",41,null],[11,"query","","",41,null],[0,"resolver","craft","Resolution of the entire dependency graph for a chest",null,null],[3,"EncodableResolve","craft::resolver","",null,null],[3,"EncodableDependency","","",null,null],[3,"EncodablePackageId","","",null,null],[3,"WorkspaceResolve","","",null,null],[12,"ws","","",42,null],[12,"resolve","","",42,null],[12,"use_root_key","","",42,null],[3,"Resolve","","Represents a fully resolved package dependency graph. Each node in the graph\nis a package and edges represent dependencies between packages.",null,null],[3,"Deps","","",null,null],[3,"DepsNotReplaced","","",null,null],[4,"Method","","",null,null],[13,"Everything","","",43,null],[13,"Required","","",43,null],[12,"dev_deps","craft::resolver::Method","",43,null],[12,"features","","",43,null],[12,"uses_default_features","","",43,null],[5,"resolve","craft::resolver","Builds the list of all packages required to build the first argument.",null,null],[11,"encode","","",44,null],[11,"decode","","",44,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",44,null],[11,"into_resolve","","",44,null],[11,"encode","","",45,null],[11,"decode","","",45,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",45,null],[11,"partial_cmp","","",45,null],[11,"lt","","",45,null],[11,"le","","",45,null],[11,"gt","","",45,null],[11,"ge","","",45,null],[11,"cmp","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"fmt","","",46,null],[11,"partial_cmp","","",46,null],[11,"lt","","",46,null],[11,"le","","",46,null],[11,"gt","","",46,null],[11,"ge","","",46,null],[11,"cmp","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"hash","","",46,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"from_str","","",46,{"inputs":[{"name":"str"}],"output":{"name":"craftresult"}}],[11,"encode","","",46,null],[11,"decode","","",46,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",42,null],[6,"Metadata","","",null,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"clone","","",47,null],[11,"clone","","",43,null],[11,"merge_from","","",47,null],[11,"iter","","",47,null],[11,"deps","","",47,null],[11,"deps_not_replaced","","",47,null],[11,"replacement","","",47,null],[11,"replacements","","",47,null],[11,"features","","",47,null],[11,"query","","",47,null],[11,"fmt","","",47,null],[11,"next","","",48,null],[11,"next","","",49,null],[0,"shell","craft","Internal shell handling for reporting purposes",null,null],[3,"ShellConfig","craft::shell","",null,null],[12,"color_config","","",50,null],[12,"tty","","",50,null],[3,"Shell","","",null,null],[3,"MultiShell","","",null,null],[4,"Verbosity","","",null,null],[13,"Verbose","","",51,null],[13,"Normal","","",51,null],[13,"Quiet","","",51,null],[4,"ColorConfig","","",null,null],[13,"Auto","","",52,null],[13,"Always","","",52,null],[13,"Never","","",52,null],[11,"clone","","",51,null],[11,"eq","","",51,null],[11,"clone","","",52,null],[11,"eq","","",52,null],[11,"fmt","","",52,null],[11,"clone","","",50,null],[11,"new","","",53,{"inputs":[{"name":"shell"},{"name":"shell"},{"name":"verbosity"}],"output":{"name":"multishell"}}],[11,"out","","",53,null],[11,"err","","",53,null],[11,"say","","",53,null],[11,"status","","",53,null],[11,"verbose","","",53,null],[11,"concise","","",53,null],[11,"error","","",53,null],[11,"warn","","",53,null],[11,"set_verbosity","","",53,null],[11,"set_color_config","","",53,null],[11,"get_verbose","","",53,null],[11,"color_config","","",53,null],[11,"create","","",54,{"inputs":[{"name":"t"},{"name":"shellconfig"}],"output":{"name":"shell"}}],[11,"set_color_config","","",54,null],[11,"say","","",54,null],[11,"say_status","","",54,null],[11,"write","","",54,null],[11,"flush","","",54,null],[0,"source","craft","Manipulations on different kind of sources",null,null],[3,"SourceId","craft::source","Unique identifier for a source of packages.",null,null],[3,"SourceMap","","",null,null],[3,"SourcesMut","","",null,null],[4,"GitReference","","",null,null],[13,"Tag","","",55,null],[13,"Branch","","",55,null],[13,"Rev","","",55,null],[6,"Sources","","",null,null],[8,"Source","","A Source finds and downloads remote packages based on names and versions.",null,null],[10,"update","","The update method performs any network operations required to get the entire list of all\nnames, versions and dependencies of packages managed by the Source.",56,null],[10,"download","","The download method fetches the full package for each name and version specified.",56,null],[10,"fingerprint","","Generates a unique string which represents the fingerprint of the current state of the\nsource.",56,null],[11,"verify","","If this source supports it, verifies the source of the package specified.",56,null],[11,"fmt","","",55,null],[11,"clone","","",55,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"partial_cmp","","",55,null],[11,"lt","","",55,null],[11,"le","","",55,null],[11,"gt","","",55,null],[11,"ge","","",55,null],[11,"cmp","","",55,null],[11,"hash","","",55,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"from_url","","Parses a source URL and returns the corresponding ID.",57,{"inputs":[{"name":"str"}],"output":{"name":"craftresult"}}],[11,"to_url","","",57,null],[11,"for_path","","",57,{"inputs":[{"name":"path"}],"output":{"name":"craftresult"}}],[11,"for_git","","",57,{"inputs":[{"name":"url"},{"name":"gitreference"}],"output":{"name":"sourceid"}}],[11,"for_registry","","",57,{"inputs":[{"name":"url"}],"output":{"name":"sourceid"}}],[11,"for_local_registry","","",57,{"inputs":[{"name":"path"}],"output":{"name":"craftresult"}}],[11,"for_directory","","",57,{"inputs":[{"name":"path"}],"output":{"name":"craftresult"}}],[11,"url","","",57,null],[11,"is_path","","",57,null],[11,"is_registry","","",57,null],[11,"is_git","","",57,null],[11,"load","","Creates an implementation of `Source` corresponding to this ID.",57,null],[11,"precise","","",57,null],[11,"git_reference","","",57,null],[11,"with_precise","","",57,null],[11,"eq","","",57,null],[11,"partial_cmp","","",57,null],[11,"cmp","","",57,null],[11,"encode","","",57,null],[11,"decode","","",57,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",57,null],[11,"hash","","",57,null],[11,"to_ref_string","","",55,null],[11,"new","","",58,{"inputs":[],"output":{"name":"sourcemap"}}],[11,"contains","","",58,null],[11,"get","","",58,null],[11,"get_mut","","",58,null],[11,"get_by_package_id","","",58,null],[11,"insert","","",58,null],[11,"is_empty","","",58,null],[11,"len","","",58,null],[11,"sources","","",58,null],[11,"sources_mut","","",58,null],[11,"next","","",59,null],[0,"sources","craft","Different kind of source implementations for package retrieval",null,null],[3,"GitSource","craft::sources","",null,null],[0,"config","","Implementation of configuration for various sources",null,null],[3,"SourceConfigMap","craft::sources::config","",null,null],[11,"new","","",60,{"inputs":[{"name":"config"}],"output":{"name":"craftresult"}}],[11,"empty","","",60,{"inputs":[{"name":"config"}],"output":{"name":"craftresult"}}],[11,"config","","",60,null],[11,"load","","",60,null],[0,"directory","craft::sources","Source description for directories",null,null],[3,"DirectorySource","craft::sources::directory","",null,null],[11,"new","","",61,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"directorysource"}}],[11,"fmt","","",61,null],[11,"query","","",61,null],[11,"supports_checksums","","",61,null],[11,"update","","",61,null],[11,"download","","",61,null],[11,"fingerprint","","",61,null],[11,"verify","","",61,null],[0,"git","craft::sources","Source description for git repositories",null,null],[3,"GitRemote","craft::sources::git","GitRemote represents a remote repository. It gets cloned into a local\nGitDatabase.",null,null],[3,"GitDatabase","","GitDatabase is a local clone of a remote repository&#39;s database. Multiple\nGitCheckouts can be cloned from this GitDatabase.",null,null],[3,"GitCheckout","","GitCheckout is a local checkout of a particular revision. Calling\n`clone_into` with a reference will resolve the reference into a revision,\nand return a CraftError if no revision for that reference was found.",null,null],[3,"GitRevision","","",null,null],[3,"GitSource","","",null,null],[5,"fetch","","",null,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"str"},{"name":"config"}],"output":{"name":"craftresult"}}],[5,"canonicalize_url","","",null,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"fmt","","",62,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"encode","","",63,null],[11,"encode","","",64,null],[11,"encode","","",65,null],[11,"new","","",63,{"inputs":[{"name":"url"}],"output":{"name":"gitremote"}}],[11,"url","","",63,null],[11,"rev_for","","",63,null],[11,"checkout","","",63,null],[11,"db_at","","",63,null],[11,"copy_to","","",64,null],[11,"rev_for","","",64,null],[11,"has_ref","","",64,null],[11,"new","craft::sources","",66,{"inputs":[{"name":"sourceid"},{"name":"config"}],"output":{"name":"gitsource"}}],[11,"url","","",66,null],[11,"read_packages","","",66,null],[11,"fmt","","",66,null],[11,"query","","",66,null],[11,"update","","",66,null],[11,"download","","",66,null],[11,"fingerprint","","",66,null],[0,"path","","Source description for certain paths",null,null],[3,"PathSource","craft::sources::path","",null,null],[11,"new","","Invoked with an absolute path to a directory that contains a Craft.toml.",67,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"pathsource"}}],[11,"new_recursive","","Creates a new source which is walked recursively to discover packages.",67,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"pathsource"}}],[11,"root_package","","",67,null],[11,"read_packages","","",67,null],[11,"list_files","","List all files relevant to building this package inside this source.",67,null],[11,"fmt","","",67,null],[11,"query","","",67,null],[11,"update","","",67,null],[11,"download","","",67,null],[11,"fingerprint","","",67,null],[0,"registry","craft::sources","A `Source` for registry-based packages.",null,null],[3,"RegistrySource","craft::sources::registry","",null,null],[3,"RegistryConfig","","",null,null],[12,"dl","","Download endpoint for all chests. This will be appended with\n`/&lt;chest&gt;/&lt;version&gt;/download` and then will be hit with an HTTP GET\nrequest to download the tarball for a chest.",68,null],[12,"api","","API endpoint for the registry. This is what&#39;s actually hit to perform\noperations like yanks, owner modifications, publish new chests, etc.",68,null],[0,"remote","","Source description for any kind of remote",null,null],[3,"RemoteRegistry","craft::sources::registry::remote","",null,null],[5,"http_handle","","Create a new HTTP handle with appropriate global configuration for craft.",null,{"inputs":[{"name":"config"}],"output":{"name":"craftresult"}}],[11,"new","","",69,{"inputs":[{"name":"sourceid"},{"name":"config"},{"name":"str"}],"output":{"name":"remoteregistry"}}],[11,"index_path","","",69,null],[11,"config","","",69,null],[11,"update_index","","",69,null],[11,"download","","",69,null],[8,"RegistryData","craft::sources::registry","",null,null],[10,"index_path","","",70,null],[10,"config","","",70,null],[10,"update_index","","",70,null],[10,"download","","",70,null],[11,"decode","","",68,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"remote","","",71,{"inputs":[{"name":"sourceid"},{"name":"config"}],"output":{"name":"registrysource"}}],[11,"local","","",71,{"inputs":[{"name":"sourceid"},{"name":"path"},{"name":"config"}],"output":{"name":"registrysource"}}],[11,"config","","Decode the configuration stored within the registry.",71,null],[11,"query","","",71,null],[11,"supports_checksums","","",71,null],[11,"update","","",71,null],[11,"download","","",71,null],[11,"fingerprint","","",71,null],[0,"replaced","craft::sources","Source ID replacement",null,null],[3,"ReplacedSource","craft::sources::replaced","",null,null],[11,"new","","",72,{"inputs":[{"name":"sourceid"},{"name":"sourceid"},{"name":"box"}],"output":{"name":"replacedsource"}}],[11,"query","","",72,null],[11,"update","","",72,null],[11,"download","","",72,null],[11,"fingerprint","","",72,null],[11,"verify","","",72,null],[0,"summary","craft","Summary subset of a Manifest",null,null],[3,"Summary","craft::summary","Subset of a `Manifest`. Contains only the most important informations about a package.\nSummaries are cloned, and should not be mutated after creation",null,null],[11,"fmt","","",73,null],[11,"clone","","",73,null],[11,"new","","",73,{"inputs":[{"name":"packageid"},{"name":"vec"},{"name":"hashmap"}],"output":{"name":"craftresult"}}],[11,"package_id","","",73,null],[11,"name","","",73,null],[11,"version","","",73,null],[11,"source_id","","",73,null],[11,"dependencies","","",73,null],[11,"features","","",73,null],[11,"checksum","","",73,null],[11,"override_id","","",73,null],[11,"set_checksum","","",73,null],[11,"map_dependencies","","",73,null],[11,"map_source","","",73,null],[11,"eq","","",73,null],[0,"util","craft","General purpose utility functions and structures",null,null],[3,"DependencyQueue","craft::util","",null,null],[3,"FileLock","","",null,null],[3,"Filesystem","","A &quot;filesystem&quot; is intended to be a globally shared, hence locked, resource\nin Craft.",null,null],[3,"LazyCell","","",null,null],[3,"Rustc","","",null,null],[12,"path","","",74,null],[12,"verbose_version","","",74,null],[12,"host","","",74,null],[12,"cap_lints","","Backwards compatibility: does this compiler support `--cap-lints` flag?",74,null],[3,"Sha256","","",null,null],[3,"GitRepo","","",null,null],[3,"HgRepo","","",null,null],[4,"Cfg","","",null,null],[13,"Name","","",75,null],[13,"KeyPair","","",75,null],[4,"CfgExpr","","",null,null],[13,"Not","","",76,null],[13,"All","","",76,null],[13,"Any","","",76,null],[13,"Value","","",76,null],[4,"Freshness","","Indication of the freshness of a package.",null,null],[13,"Fresh","","",77,null],[13,"Dirty","","",77,null],[5,"read2","","",null,{"inputs":[{"name":"childstdout"},{"name":"childstderr"},{"name":"fnmut"}],"output":{"name":"result"}}],[0,"config","","The configuration of the crafting area",null,null],[3,"Config","craft::util::config","",null,null],[3,"Value","","",null,null],[12,"val","","",78,null],[12,"definition","","",78,null],[4,"Location","","",null,null],[13,"Project","","",79,null],[13,"Global","","",79,null],[4,"ConfigValue","","",null,null],[13,"Integer","","",80,null],[13,"String","","",80,null],[13,"List","","",80,null],[13,"Table","","",80,null],[13,"Boolean","","",80,null],[4,"Definition","","",null,null],[13,"Path","","",81,null],[13,"Environment","","",81,null],[5,"set_config","","",null,{"inputs":[{"name":"config"},{"name":"location"},{"name":"str"},{"name":"configvalue"}],"output":{"name":"craftresult"}}],[11,"new","","",82,{"inputs":[{"name":"multishell"},{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"config"}}],[11,"default","","",82,{"inputs":[],"output":{"name":"craftresult"}}],[11,"home","","",82,null],[11,"git_path","","",82,null],[11,"registry_index_path","","",82,null],[11,"registry_cache_path","","",82,null],[11,"registry_source_path","","",82,null],[11,"shell","","",82,null],[11,"doc","","",82,null],[11,"rustc","","",82,null],[11,"values","","",82,null],[11,"cwd","","",82,null],[11,"target_dir","","",82,null],[11,"get_string","","",82,null],[11,"get_bool","","",82,null],[11,"get_path","","",82,null],[11,"get_list","","",82,null],[11,"get_table","","",82,null],[11,"get_i64","","",82,null],[11,"net_retry","","",82,null],[11,"expected","","",82,null],[11,"configure","","",82,null],[11,"extra_verbose","","",82,null],[11,"network_allowed","","",82,null],[11,"lock_update_allowed","","",82,null],[11,"eq","","",79,null],[11,"clone","","",79,null],[11,"encode","","",79,null],[11,"decode","","",79,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"decode","","",80,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",80,null],[11,"encode","","",80,null],[11,"i64","","",80,null],[11,"string","","",80,null],[11,"table","","",80,null],[11,"list","","",80,null],[11,"boolean","","",80,null],[11,"desc","","",80,null],[11,"definition_path","","",80,null],[11,"root","","",81,null],[11,"fmt","","",81,null],[0,"errors","craft::util","Error reporting and conversion",null,null],[3,"ProcessError","craft::util::errors","",null,null],[12,"desc","","",83,null],[12,"exit","","",83,null],[12,"output","","",83,null],[3,"CraftTestError","","Error when testcases fail",null,null],[12,"desc","","",84,null],[12,"exit","","",84,null],[12,"causes","","",84,null],[3,"Human","","",null,null],[12,"0","","",85,null],[3,"CliError","","",null,null],[12,"error","","",86,null],[12,"unknown","","",86,null],[12,"exit_code","","",86,null],[5,"process_error","","",null,{"inputs":[{"name":"str"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"processerror"}}],[5,"internal_error","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"box"}}],[5,"internal","","",null,{"inputs":[{"name":"s"}],"output":{"name":"box"}}],[5,"human","","",null,{"inputs":[{"name":"s"}],"output":{"name":"box"}}],[5,"caused_human","","",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"box"}}],[6,"CraftResult","","",null,null],[6,"CliResult","","",null,null],[8,"CraftError","","",null,null],[11,"is_human","","",87,null],[11,"craft_cause","","",87,null],[11,"as_error","","",87,null],[8,"ChainError","","",null,null],[10,"chain_error","","",88,null],[8,"NetworkError","","",null,null],[10,"maybe_spurious","","",89,null],[11,"description","","",83,null],[11,"cause","","",83,null],[11,"fmt","","",83,null],[11,"fmt","","",83,null],[11,"new","","",84,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"fmt","","",84,null],[11,"fmt","","",84,null],[11,"description","","",84,null],[11,"cause","","",84,null],[11,"fmt","","",85,null],[11,"description","","",85,null],[11,"cause","","",85,null],[11,"fmt","","",85,null],[11,"is_human","","",85,null],[11,"craft_cause","","",85,null],[11,"fmt","","",86,null],[11,"description","","",86,null],[11,"cause","","",86,null],[11,"fmt","","",86,null],[11,"new","","",86,{"inputs":[{"name":"box"},{"name":"i32"}],"output":{"name":"clierror"}}],[11,"code","","",86,{"inputs":[{"name":"i32"}],"output":{"name":"clierror"}}],[11,"from","","",86,{"inputs":[{"name":"box"}],"output":{"name":"clierror"}}],[0,"graph","craft::util","Dependency graph utility implementations",null,null],[3,"Graph","craft::util::graph","",null,null],[6,"Nodes","","",null,null],[6,"Edges","","",null,null],[11,"new","","",90,{"inputs":[],"output":{"name":"graph"}}],[11,"add","","",90,null],[11,"link","","",90,null],[11,"get_nodes","","",90,null],[11,"edges","","",90,null],[11,"sort","","",90,null],[11,"iter","","",90,null],[11,"fmt","","",90,null],[11,"eq","","",90,null],[11,"clone","","",90,null],[0,"hex","craft::util","Hex conversion helper utilities",null,null],[5,"to_hex","craft::util::hex","",null,{"inputs":[{"name":"u64"}],"output":{"name":"string"}}],[5,"hash_u64","","",null,{"inputs":[{"name":"h"}],"output":{"name":"u64"}}],[5,"short_hash","","",null,{"inputs":[{"name":"h"}],"output":{"name":"string"}}],[0,"important_paths","craft::util","Path and Manifest finding utilities",null,null],[5,"find_project","craft::util::important_paths","Iteratively search for `file` in `pwd` and its parents, returning\nthe path of the directory.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"craftresult"}}],[5,"find_project_manifest","","Iteratively search for `file` in `pwd` and its parents, returning\nthe path to the file.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"craftresult"}}],[5,"find_root_manifest_for_wd","","Find the root Craft.toml",null,{"inputs":[{"name":"option"},{"name":"path"}],"output":{"name":"craftresult"}}],[5,"find_project_manifest_exact","","Return the path to the `file` in `pwd`, if it exists.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"craftresult"}}],[0,"job","craft::util","Job management (mostly for windows)",null,null],[5,"setup","craft::util::job","",null,{"inputs":[],"output":{"name":"option"}}],[6,"Setup","","",null,null],[0,"lev_distance","craft::util","Levenshtein distance calculation",null,null],[5,"lev_distance","craft::util::lev_distance","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[0,"machine_message","craft::util","Compiler message parsing and emission",null,null],[3,"FromCompiler","craft::util::machine_message","",null,null],[11,"encode","","",91,null],[11,"new","","",91,{"inputs":[{"name":"packageid"},{"name":"target"},{"name":"json"}],"output":{"name":"fromcompiler"}}],[11,"emit","","",91,null],[0,"network","craft::util","Networking utilities",null,null],[5,"with_retry","craft::util::network","Wrapper method for network call retry logic.",null,{"inputs":[{"name":"config"},{"name":"f"}],"output":{"name":"craftresult"}}],[0,"paths","craft::util","Path manipulation utilities",null,null],[5,"join_paths","craft::util::paths","",null,null],[5,"dylib_path_envvar","","",null,{"inputs":[],"output":{"name":"str"}}],[5,"dylib_path","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"normalize_path","","",null,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[5,"without_prefix","","",null,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[5,"read","","",null,{"inputs":[{"name":"path"}],"output":{"name":"craftresult"}}],[5,"read_bytes","","",null,{"inputs":[{"name":"path"}],"output":{"name":"craftresult"}}],[5,"write","","",null,null],[5,"append","","",null,null],[5,"path2bytes","","",null,{"inputs":[{"name":"path"}],"output":{"name":"craftresult"}}],[5,"bytes2path","","",null,null],[0,"process_builder","craft::util","Process handling utilities",null,null],[3,"ProcessBuilder","craft::util::process_builder","",null,null],[5,"process","","",null,{"inputs":[{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"clone","","",92,null],[11,"eq","","",92,null],[11,"ne","","",92,null],[11,"fmt","","",92,null],[11,"fmt","","",92,null],[11,"arg","","",92,null],[11,"args","","",92,null],[11,"cwd","","",92,null],[11,"env","","",92,null],[11,"env_remove","","",92,null],[11,"get_args","","",92,null],[11,"get_cwd","","",92,null],[11,"get_env","","",92,null],[11,"get_envs","","",92,null],[11,"exec","","",92,null],[11,"exec_replace","","",92,null],[11,"exec_with_output","","",92,null],[11,"exec_with_streaming","","",92,null],[11,"build_command","","",92,null],[0,"profile","craft::util","Profiling utilities",null,null],[3,"Profiler","craft::util::profile","",null,null],[5,"start","","",null,{"inputs":[{"name":"t"}],"output":{"name":"profiler"}}],[11,"drop","","",93,null],[0,"to_semver","craft::util","Semantic Versioning conversions",null,null],[8,"ToSemver","craft::util::to_semver","",null,null],[10,"to_semver","","",94,null],[0,"to_url","craft::util","URL conversion trait",null,null],[8,"ToUrl","craft::util::to_url","",null,null],[10,"to_url","","",95,null],[0,"toml","craft::util","TOML parsing and manipulation",null,null],[3,"Layout","craft::util::toml","Representation of the projects file layout.",null,null],[12,"root","","",96,null],[3,"DetailedTomlDependency","","",null,null],[3,"TomlManifest","","",null,null],[3,"TomlProfiles","","",null,null],[3,"TomlOptLevel","","",null,null],[3,"TomlProfile","","",null,null],[3,"TomlProject","","",null,null],[3,"TomlWorkspace","","",null,null],[3,"TomlVersion","","",null,null],[4,"TomlDependency","","",null,null],[13,"Simple","","",97,null],[13,"Detailed","","",97,null],[5,"to_manifest","","",null,{"inputs":[{"name":"str"},{"name":"sourceid"},{"name":"layout"},{"name":"config"}],"output":{"name":"craftresult"}}],[5,"parse","","",null,{"inputs":[{"name":"str"},{"name":"path"},{"name":"config"}],"output":{"name":"craftresult"}}],[11,"clone","","",96,null],[11,"from_project_path","","Returns a new `Layout` for a given root path.\nThe `root_path` represents the directory that contains the `Craft.toml` file.",96,{"inputs":[{"name":"path"}],"output":{"name":"layout"}}],[11,"decode","","",97,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",98,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",98,null],[11,"default","","",98,{"inputs":[],"output":{"name":"detailedtomldependency"}}],[11,"decode","","",99,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",100,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",100,null],[11,"default","","",100,{"inputs":[],"output":{"name":"tomlprofiles"}}],[11,"clone","","",101,null],[11,"decode","","",101,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",102,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",102,null],[11,"default","","",102,{"inputs":[],"output":{"name":"tomlprofile"}}],[11,"decode","","",103,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",104,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",105,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"to_package_id","","",103,null],[11,"clone","craft::util","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"fmt","","",75,null],[11,"clone","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"fmt","","",76,null],[11,"from_str","","",75,{"inputs":[{"name":"str"}],"output":{"name":"craftresult"}}],[11,"fmt","","",75,null],[11,"matches","","",76,null],[11,"from_str","","",76,{"inputs":[{"name":"str"}],"output":{"name":"craftresult"}}],[11,"fmt","","",76,null],[11,"fmt","","",106,null],[11,"eq","","",77,null],[11,"fmt","","",77,null],[11,"clone","","",77,null],[11,"combine","","",77,null],[11,"new","","Creates a new dependency queue with 0 packages.",106,{"inputs":[],"output":{"name":"dependencyqueue"}}],[11,"queue","","Adds a new package to this dependency queue.",106,null],[11,"dequeue","","Dequeues a package that is ready to be built.",106,null],[11,"is_empty","","Returns whether there are remaining packages to be built.",106,null],[11,"len","","Returns the number of remaining packages to be built.",106,null],[11,"finish","","Indicate that a package has been built.",106,null],[11,"file","","Returns the underlying file handle of this lock.",107,null],[11,"path","","Returns the underlying path that this lock points to.",107,null],[11,"parent","","Returns the parent path containing this file",107,null],[11,"remove_siblings","","Removes all sibling files to this locked file.",107,null],[11,"read","","",107,null],[11,"seek","","",107,null],[11,"write","","",107,null],[11,"flush","","",107,null],[11,"drop","","",107,null],[11,"clone","","",108,null],[11,"fmt","","",108,null],[11,"new","","Creates a new filesystem to be rooted at the given path.",108,{"inputs":[{"name":"pathbuf"}],"output":{"name":"filesystem"}}],[11,"join","","Like `Path::join`, creates a new filesystem rooted at this filesystem\njoined with the given path.",108,null],[11,"push","","Like `Path::push`, pushes a new path component onto this filesystem.",108,null],[11,"into_path_unlocked","","Consumes this filesystem and returns the underlying `PathBuf`.",108,null],[11,"create_dir","","Creates the directory pointed to by this filesystem.",108,null],[11,"display","","Returns an adaptor that can be used to print the path of this\nfilesystem.",108,null],[11,"open_rw","","Opens exclusive access to a file, returning the locked version of a\nfile.",108,null],[11,"open_ro","","Opens shared access to a file, returning the locked version of a file.",108,null],[11,"new","","Creates a new empty lazy cell.",109,{"inputs":[],"output":{"name":"lazycell"}}],[11,"fill","","Put a value into this cell.",109,null],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell\nitself.",109,null],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",109,null],[11,"get_or_try_init","","Borrows the contents of this lazy cell, initializing it if necessary.",109,null],[11,"new","","Run the compiler at `path` to learn various pieces of information about\nit.",74,{"inputs":[{"name":"pathbuf"}],"output":{"name":"craftresult"}}],[11,"process","","",74,null],[11,"new","","",110,{"inputs":[],"output":{"name":"sha256"}}],[11,"update","","",110,null],[11,"finish","","",110,null],[11,"init","","",111,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"craftresult"}}],[11,"discover","","",111,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"result"}}],[11,"init","","",112,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"craftresult"}}],[11,"discover","","",112,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"craftresult"}}],[0,"workspace","craft","Workspace manipulation and description",null,null],[3,"Workspace","craft::workspace","The core abstraction in Craft for working with a workspace of chests.",null,null],[3,"Members","","An iterator over the member packages of a workspace, returned by `Workspace::members`",null,null],[4,"WorkspaceConfig","","Configuration of a workspace in a manifest.",null,null],[13,"Root","","Indicates that `[workspace]` was present and the members were\noptionally specified as well.",113,null],[12,"members","craft::workspace::WorkspaceConfig","",113,null],[13,"Member","craft::workspace","Indicates that `[workspace]` was present and the `root` field is the\noptional value of `package.workspace`, if present.",113,null],[12,"root","craft::workspace::WorkspaceConfig","",113,null],[11,"fmt","craft::workspace","",113,null],[11,"clone","","",113,null],[11,"new","","Creates a new workspace given the target manifest pointed to by `manifest_path`.",114,{"inputs":[{"name":"path"},{"name":"config"}],"output":{"name":"craftresult"}}],[11,"one","","Creates a &quot;temporary workspace&quot; from one package which only contains that package.",114,{"inputs":[{"name":"package"},{"name":"config"},{"name":"option"}],"output":{"name":"craftresult"}}],[11,"current","","Returns the current package of this workspace.",114,null],[11,"current_opt","","",114,null],[11,"config","","Returns the `Config` this workspace is associated with.",114,null],[11,"profiles","","",114,null],[11,"root","","Returns the root path of this workspace.",114,null],[11,"target_dir","","",114,null],[11,"root_replace","","Returns the root [replace] section of this workspace.",114,null],[11,"members","","Returns an iterator over all packages in this workspace",114,null],[11,"is_empty","","",115,null],[11,"next","","",115,null]],"paths":[[4,"Platform"],[4,"Kind"],[3,"Dependency"],[3,"DependencyInner"],[3,"ManifestMetadata"],[3,"Profile"],[3,"Profiles"],[4,"EitherManifest"],[4,"LibKind"],[4,"TargetKind"],[3,"Manifest"],[3,"VirtualManifest"],[3,"Target"],[3,"CleanOptions"],[3,"CompileOptions"],[3,"DocOptions"],[3,"UpdateOptions"],[3,"NewOptions"],[3,"OutputMetadataOptions"],[3,"PackageOpts"],[3,"BuildOutput"],[3,"BuildConfig"],[3,"TargetConfig"],[3,"Context"],[3,"Compilation"],[3,"Unit"],[4,"CompileFilter"],[4,"CompileMode"],[4,"MessageFormat"],[4,"VersionControl"],[4,"Kind"],[3,"ExportInfo"],[3,"Layout"],[3,"LayoutProxy"],[3,"Package"],[3,"PackageSet"],[3,"Metadata"],[4,"PackageIdError"],[3,"PackageId"],[3,"PackageIdSpec"],[8,"Registry"],[3,"PackageRegistry"],[3,"WorkspaceResolve"],[4,"Method"],[3,"EncodableResolve"],[3,"EncodableDependency"],[3,"EncodablePackageId"],[3,"Resolve"],[3,"Deps"],[3,"DepsNotReplaced"],[3,"ShellConfig"],[4,"Verbosity"],[4,"ColorConfig"],[3,"MultiShell"],[3,"Shell"],[4,"GitReference"],[8,"Source"],[3,"SourceId"],[3,"SourceMap"],[3,"SourcesMut"],[3,"SourceConfigMap"],[3,"DirectorySource"],[3,"GitRevision"],[3,"GitRemote"],[3,"GitDatabase"],[3,"GitCheckout"],[3,"GitSource"],[3,"PathSource"],[3,"RegistryConfig"],[3,"RemoteRegistry"],[8,"RegistryData"],[3,"RegistrySource"],[3,"ReplacedSource"],[3,"Summary"],[3,"Rustc"],[4,"Cfg"],[4,"CfgExpr"],[4,"Freshness"],[3,"Value"],[4,"Location"],[4,"ConfigValue"],[4,"Definition"],[3,"Config"],[3,"ProcessError"],[3,"CraftTestError"],[3,"Human"],[3,"CliError"],[8,"CraftError"],[8,"ChainError"],[8,"NetworkError"],[3,"Graph"],[3,"FromCompiler"],[3,"ProcessBuilder"],[3,"Profiler"],[8,"ToSemver"],[8,"ToUrl"],[3,"Layout"],[4,"TomlDependency"],[3,"DetailedTomlDependency"],[3,"TomlManifest"],[3,"TomlProfiles"],[3,"TomlOptLevel"],[3,"TomlProfile"],[3,"TomlProject"],[3,"TomlWorkspace"],[3,"TomlVersion"],[3,"DependencyQueue"],[3,"FileLock"],[3,"Filesystem"],[3,"LazyCell"],[3,"Sha256"],[3,"GitRepo"],[3,"HgRepo"],[4,"WorkspaceConfig"],[3,"Workspace"],[3,"Members"]]};
initSearch(searchIndex);
